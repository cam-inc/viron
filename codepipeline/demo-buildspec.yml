version: 0.2
run-as: root

phases:
  pre_build:
    commands:
      - echo Login to ECR.
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION  | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker pull $REPOSITORY_URI:latest || true
      - docker login $DOCKER_PROXY_HOST -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
  build:
    commands:
      - echo Building the Docker image...
      - >
        docker build
        --cache-from $REPOSITORY_URI:latest
        --build-arg DOCKER_PROXY_HOST=$DOCKER_PROXY_HOST
        -t $IMAGE_REPO_NAME:latest
        -f ./example/nodejs/Dockerfile ./example/nodejs
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:$COMMIT_ID
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo push step...
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$COMMIT_ID
      - docker push $REPOSITORY_URI:latest
      - printf '{"ImageURI":"%s"}' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$COMMIT_ID > imageDetail.json
      - aws ecs describe-task-definition --task-definition $ECS_TASK_DEF_NAME | jq '.taskDefinition' |jq '.containerDefinitions[0].image = "<IMAGE1_NAME>"' | jq 'del(.["taskDefinitionArn", "registeredBy", "registeredAt", "revision", "status"])' > taskdef.json
      - cat taskdef.json
      - cat imageDetail.json
artifacts:
  files:
    - imageDetail.json
    - taskdef.json
    - codepipeline/demo-deployspec.yml
  name: viron-demo-artifact
  discard-paths: no
