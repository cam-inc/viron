swagger: "2.0"
host: localhost:3000
info:
  title: Viron example for EMail Auth
  description: Design-based Management Console.
  version: 0.0.1
schemes:
- https

definitions:
  AdminRole:
    example:
      paths:
        "GET:/user": true
      role_id: operator
    properties:
      paths:
        $ref: '#/definitions/AdminRolePath'
      role_id:
        description: ユーザー権限ID
        type: string
    required:
    - role_id
    - paths
    type: object

  AdminRoleCollection:
    items:
      $ref: '#/definitions/AdminRole'
    type: array

  AdminUser:
    example:
      email: test@example.com
      id: 1
      role_id: operator
    properties:
      email:
        description: E-Mail
        type: string
      id:
        description: ユニークID
        format: int64
        type: integer
      role_id:
        description: ユーザー権限ID
        type: string
    required:
    - id
    - email
    type: object

  AdminUserCollection:
    items:
      $ref: '#/definitions/AdminUser'
    type: array

  AuditLog:
    example:
      createdAt: 2006-02-12T07:09:13+09:00
      request_body: '{"name":"test", "id":1}'
      request_method: GET
      request_uri: '/user'
      source_ip: 200.200.200.200
      status_code: 200
      user_id: test@example.com
    properties:
      createdAt:
        description: 日時
        format: date-time
        type: string
      request_body:
        description: リクエストボディ
        type: string
      request_method:
        description: リクエストメソッド
        type: string
      request_uri:
        description: リクエストURI
        type: string
      source_ip:
        description: ソースIP
        type: string
      status_code:
        description: ステータスコード
        type: integer
      user_id:
        description: ユーザー
        type: string
    type: object

  AuditLogCollection:
    items:
      $ref: '#/definitions/AuditLog'
    type: array

  AuthType:
    example:
      method: POST
      provider: viron-example-email
      type: email
      url: '/signin'
    properties:
      method:
        description: リクエストメソッド
        type: string
      provider:
        description: 認証プロバイダ
        type: string
      type:
        description: 認証方式
        type: string
      url:
        description: リクエストURL
        type: string
    required:
    - type
    - url
    - method
    - provider
    type: object

  AuthTypeCollection:
    items:
      $ref: '#/definitions/AuthType'
    type: array

  CreateAdminRolePayload:
    example:
      paths:
      - "GET:/user": true
      role_id: operator
    properties:
      paths:
        $ref: '#/definitions/AdminRolePath'
      role_id:
        description: ユーザー権限ID
        type: string
    type: object
    required:
    - role_id
    - paths

  CreateAdminUserPayload:
    example:
      email: user@sample.com
      password: XXXXXXXXXXXXXXXX
      role_id: viewer
    properties:
      email:
        description: E-Mail
        type: string
      password:
        description: パスワード
        type: string
        format: password
        minLength: 8
        pattern: "^(?=.*?[a-zA-Z])(?=.*?\\d)[a-zA-Z\\d!?#$%&@*+/-_<=>]{8,}"
      role_id:
        description: ユーザー権限ID
        type: string
        x-autogen-enum:
          model: admin_roles
          field: role_id
          defaults:
          - super
          - viewer
    required:
    - email
    - password
    type: object

  Viron:
    example:
      color: white
      theme: standard
      name: Viron Example for EMail Auth
      pages:
      - components:
        - api:
            method: get
            path: /stats/dau
          name: DAU
          options:
          - key: key
            value: value
          pagination: true
          query:
          - key: key
            type: string
          style: number
          table_labels:
          - name
        group: empty
        id: quickview
        name: クイックビュー
        section: dashboard
      tags:
      - viron
      - example
      thumbnail: https://image.com/thumb.png
    properties:
      color:
        default: white
        enum:
        - white
        - black
        - purple
        - blue
        - green
        - yellow
        - red
        - gray
        type: string
      theme:
        default: standard
        enum:
        - standard
        - midnight
        - terminal
        type: string
      name:
        type: string
      pages:
        items:
          $ref: '#/definitions/Page'
        type: array
      tags:
        items:
          type: string
        type: array
      thumbnail:
        type: string
    required:
    - name
    - color
    - thumbnail
    - tags
    - pages
    type: object

  UpdateAdminRolePayload:
    example:
      paths:
      - "GET:/user": true
    properties:
      paths:
        $ref: '#/definitions/AdminRolePath'
    type: object

  UpdateAdminUserPayload:
    example:
      password: XXXXXXXXXXXXXXXX
      role_id: viewer
    properties:
      password:
        description: パスワード
        type: string
        format: password
        minLength: 8
        pattern: "^(?=.*?[a-zA-Z])(?=.*?\\d)[a-zA-Z\\d!?#$%&@*+/-_<=>]{8,}"
      role_id:
        description: ユーザー権限ID
        type: string
        x-autogen-enum:
          model: admin_roles
          field: role_id
          defaults:
          - super
          - viewer
    required:
    - role_id
    type: object

  UpdateAccountPayload:
    example:
      password: XXXXXXXXXXXXXXXX
    properties:
      password:
        description: パスワード
        type: string
        format: password
    required:
    - password
    type: object

  AdminRolePath:
    description: 許可リクエスト
    example:
      "GET:/user": true
    properties:
      path: # AutoGenerate
        type: boolean
    type: object

  Component:
    example:
      api:
        method: get
        path: /user
      name: ユーザー
      options:
      - key: key
        value: value
      pagination: true
      query:
      - key: key
        type: string
      style: table
      table_labels:
      - id
      - name
    properties:
      api:
        properties:
          method:
            description: リクエストメソッド
            type: string
          path:
            description: リクエストパス
            type: string
        required:
        - path
        - method
        type: object
      name:
        description: ページタイトル
        type: string
      options:
        description: オプション
        items:
          properties:
            key:
              description: オプション キー名
              type: string
            value:
              description: オプション 値
              type: string
          required:
          - key
          - value
          type: object
        type: array
      pagination:
        description: ページネーション
        type: boolean
      query:
        description: クエリパラメータ
        items:
          properties:
            key:
              description: クエリパラメータ キー名
              type: string
            type:
              default: string
              description: クエリパラメータ 型
              enum:
              - string
              - integer
              - number
              - boolean
              - date
              - datetime
              - time
              type: string
          required:
          - key
          - type
          type: object
        type: array
      style:
        description: コンポーネントスタイル
        default: number
        enum:
        - number
        - list
        - table
        - chart
        type: string
      table_labels:
        description: テーブル列 表示順
        items:
          type: string
        type: array
    required:
    - api
    - name
    - style
    - pagination
    type: object

  Error:
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1502172152
      status: "400"
    properties:
      code:
        description: エラーコード
        type: string
      detail:
        description: 詳細
        type: string
      id:
        description: ID
        type: string
      meta:
        additionalProperties: true
        description: メタ情報
        type: object
      status:
        description: ステータスコード
        type: string
    type: object

  Page:
    example:
      components:
      - api:
          method: get
          path: /user
        name: ユーザー
        options:
        - key: key
          value: value
        pagination: true
        query:
        - key: key
          type: string
        style: table
        table_labels:
        - name
      group: UserGroup
      id: user
      name: ユーザー
      section: admin
    properties:
      components:
        items:
          $ref: '#/definitions/Component'
        type: array
      group:
        type: string
      id:
        description: ページID
        type: string
      name:
        description: 名称
        type: string
      section:
        description: セクション名
        default: manage
        enum:
        - manage
        - dashboard
        type: string
    required:
    - id
    - name
    - section
    - group
    - components
    type: object

  SigninAuthPayload:
    example:
      email: user1@example.com
      password: XXXXXXXXXXXX
    properties:
      email:
        type: string
      password:
        type: string
        format: password
    type: object

  StatsNumber:
    example:
      value: 12345678
    properties:
      value:
        format: int64
        type: integer
    required:
    - value
    type: object

  StatsChart:
    description: chart data
    example:
      color: blue
      data:
      - name: example-name
        distance: 11111
      guide:
        x:
          label: distance
        y:
          label: name
      size: temperature
      x: name
      y: distance
    properties:
      color:
        description: ドットの色分けに使用するkey
        example: blue
        type: string
      data:
        description: グラフデータ
        example:
        - name: example-name
          distance: 11111
        items:
          additionalProperties: true
          example:
            name: example-name
            distance: 11111
          type: object
        type: array
      guide:
        $ref: '#/definitions/StatsGuideType'
      size:
        description: ドットの大きさに使用するkey
        example: temperature
        type: string
      x:
        description: X軸に使用するkey
        example: name
        type: string
      y:
        description: Y軸に使用するkey
        example: distance
        type: string
    required:
    - data
    - x
    - y
    type: object

  StatsGuideType:
    example:
      x:
        label: x-label
      y:
        label: y-label
    properties:
      x:
        $ref: '#/definitions/StatsLabelType'
      y:
        $ref: '#/definitions/StatsLabelType'
    type: object

  StatsLabelType:
    example:
      label: yyyymmdd
    properties:
      label:
        example: yyyymmdd
        type: string
    required:
    - label
    type: object

  UserCollection:
    items:
      $ref: '#/definitions/User'
    type: array

  User:
    example:
      birthday: 1995-05-12T09:45:56Z
      blood_type: A
      createdAt: 2010-04-14T11:16:32+09:00
      id: 1
      job: 大学生
      name: 山田 太郎
      sex: male
      updatedAt: 1994-04-27T12:25:11+09:00
    properties:
      birthday:
        description: 誕生日
        format: date-time
        type: string
      blood_type:
        description: 血液型
        enum:
        - A
        - B
        - O
        - AB
        type: string
      createdAt:
        description: 作成日時
        format: date-time
        type: string
      id:
        description: ユーザーID
        format: int64
        type: integer
      job:
        description: 職業
        type: string
      name:
        description: 名前
        type: string
      sex:
        description: 性別
        enum:
        - male
        - female
        - other
        type: string
      thumbnail:
        description: サムネイル画像
        type: string
        format: base64
        x-mime-type: image/png
      updatedAt:
        description: 更新日時
        format: date-time
        type: string
    required:
    - id
    - name
    type: object

paths:
  /:
    get:
      x-swagger-router-controller: root
      description: ルート取得
      operationId: root#show
      responses:
        "301":
          description: Moved Permanently
      summary: ルート
      tags:
      - swagger

  /adminrole:
    get:
      x-swagger-router-controller: viron_admin_role
      description: ユーザー権限一覧
      operationId: admin_role#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminRoleCollection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー権限一覧
      tags:
      - admin_role

    post:
      x-swagger-router-controller: viron_admin_role
      description: ユーザー権限作成
      operationId: admin_role#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAdminRolePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminRole'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー権限作成
      tags:
      - admin_role

  /adminrole/{role_id}:
    delete:
      x-swagger-router-controller: viron_admin_role
      description: ユーザー権限削除
      operationId: admin_role#remove
      parameters:
      - description: ユーザー権限ID
        in: path
        name: role_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー権限削除
      tags:
      - admin_role

    put:
      x-swagger-router-controller: viron_admin_role
      description: ユーザー権限更新
      operationId: admin_role#update
      parameters:
      - description: ユーザー権限ID
        in: path
        name: role_id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAdminRolePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminRole'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー権限更新
      tags:
      - admin_role

  /adminuser:
    get:
      x-swagger-router-controller: viron_admin_user
      description: 管理ユーザー一覧
      operationId: admin_user#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminUserCollection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: 管理ユーザー一覧
      tags:
      - admin_user

    post:
      x-swagger-router-controller: viron_admin_user
      description: 管理ユーザー作成
      operationId: admin_user#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAdminUserPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: 管理ユーザー作成
      tags:
      - admin_user

  /adminuser/{id}:
    delete:
      x-swagger-router-controller: viron_admin_user
      description: 管理ユーザー削除
      operationId: admin_user#remove
      parameters:
      - description: 管理ユーザーID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: 管理ユーザー削除
      tags:
      - admin_user

    put:
      x-swagger-router-controller: viron_admin_user
      description: 管理ユーザー情報更新
      operationId: admin_user#update
      parameters:
      - description: 管理ユーザーID
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAdminUserPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: 管理ユーザー更新
      tags:
      - admin_user

  /auditlog:
    get:
      x-swagger-router-controller: viron_audit_log
      description: 監査ログ一覧
      operationId: audit_log#list
      parameters:
      - description: 1ページあたりの件数
        in: query
        name: limit
        required: false
        type: integer
      - description: ページの開始位置
        in: query
        name: offset
        required: false
        type: integer
      - description: リクエストメソッド
        in: query
        name: request_method
        required: false
        type: string
        enum:
        - GET
        - POST
        - PUT
        - DELETE
      - description: ユーザー
        in: query
        name: user_id
        required: false
        type: string
      - description: リクエストURI
        in: query
        name: request_uri
        required: false
        type: string
      - description: 日時
        in: query
        name: createdAt
        required: false
        type: string
      - description: ソースIP
        in: query
        name: source_ip
        required: false
        type: string
      - description: ステータスコード
        in: query
        name: status_code
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuditLogCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: 監査ログ一覧
      tags:
      - audit_log

  /viron:
    get:
      x-swagger-router-controller: viron
      description: エンドポイント全体情報取得
      operationId: viron#show
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Viron'
      security:
      - jwt:
        - api:access
      summary: エンドポイント全体情報取得
      tags:
      - viron

  /viron_authtype:
    get:
      x-swagger-router-controller: viron_authtype
      description: 認証方式一覧
      operationId: auth_type#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthTypeCollection'
      summary: 認証方式一覧
      tags:
      - auth_type

  /signin:
    post:
      x-swagger-router-controller: viron_auth
      description: サインイン
      operationId: viron_auth#signin
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SigninAuthPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "307":
          description: Temporary Redirect
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: サインイン
      tags:
      - auth

  /signout:
    post:
      x-swagger-router-controller: viron_auth
      description: サインアウト
      operationId: viron_auth#signout
      responses:
        "204":
          description: No Content
      summary: サインアウト
      tags:
      - auth

  /swagger.json:
    get:
      x-swagger-router-controller: swagger
      description: swagger.json取得
      operationId: swagger#show
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: swagger.json取得
      tags:
      - swagger

  /account:
    get:
      x-swagger-router-controller: viron_account
      description: アカウント情報取得
      operationId: account#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminUserCollection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: アカウント設定
      tags:
      - account

  /account/{id}:
    put:
      x-swagger-router-controller: viron_account
      description: アカウント情報更新
      operationId: account#update
      parameters:
      - description: 管理ユーザーID
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAccountPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdminUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: アカウント情報 更新
      tags:
      - account

  /stats/dau:
    get:
      x-swagger-router-controller: stats
      description: Service Daily Activity User
      operationId: stats#dau
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StatsNumber'
      summary: DAU取得
      tags:
      - stats

  /stats/mau:
    get:
      x-swagger-router-controller: stats
      description: Service Monthly Activity User
      operationId: stats#mau
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StatsNumber'
      summary: MAU取得
      tags:
      - stats

  /stats/area:
    get:
      x-swagger-router-controller: stats
      description: Area Chart Data
      operationId: stats#area
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StatsChart'
      summary: chart(area)
      tags:
      - stats

  /user:
    get:
      x-swagger-router-controller: user
      description: ユーザー一覧
      operationId: user#list
      parameters:
      - description: 名前
        in: query
        name: name
        required: false
        type: string
      - description: 1ページあたりの件数
        in: query
        name: limit
        required: false
        type: integer
      - description: ページの開始位置
        in: query
        name: offset
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー一覧
      tags:
      - user

    post:
      x-swagger-router-controller: user
      description: ユーザー作成
      operationId: user#create
      parameters:
      - in: formData
        name: birthday
        description: 誕生日
        format: date-time
        type: string
      - in: formData
        name: blood_type
        description: 血液型
        enum:
        - A
        - B
        - O
        - AB
        type: string
      - in: formData
        name: job
        description: 職業
        type: string
      - in: formData
        name: name
        description: 名前
        type: string
        required: true
      - in: formData
        name: sex
        description: 性別
        enum:
        - male
        - female
        - other
        type: string
      - in: formData
        name: image
        type: file
        description: サムネイル
        x-accept: image/*
      consumes:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー作成
      tags:
      - user

  /user/{id}:
    delete:
      x-swagger-router-controller: user
      description: ユーザー削除
      operationId: user#remove
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー削除
      tags:
      - user

    put:
      x-swagger-router-controller: user
      description: ユーザー情報更新
      operationId: user#update
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: birthday
        description: 誕生日
        format: date-time
        type: string
      - in: formData
        name: blood_type
        description: 血液型
        enum:
        - A
        - B
        - O
        - AB
        type: string
      - in: formData
        name: job
        description: 職業
        type: string
      - in: formData
        name: name
        description: 名前
        type: string
        required: true
      - in: formData
        name: sex
        description: 性別
        enum:
        - male
        - female
        - other
        type: string
      - in: formData
        name: image
        type: file
        description: サムネイル
      consumes:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt:
        - api:access
      summary: ユーザー更新
      tags:
      - user

securityDefinitions:
  jwt:
    type: oauth2
    authorizationUrl: /signin
    flow: implicit
    scopes:
      api:access: API access
produces:
  - application/json
  - text/plain
consumes:
  - application/json
  - text/plain
