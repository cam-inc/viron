openapi: 3.0.2
info:
  version: 0.0.1
  title: '@viron/example-nodejs users'
  description: users api specifications
  x-pages:
    - id: user
      group: 管理画面/ユーザー
      title: ユーザー情報
      description: ユーザー情報を閲覧/管理します
      contents:
        - operationId: listUsers
          resourceId: user
          type: table
          pagination: true
          actions:
            # CSVダウンロード
            - operationId: downloadResources
              defaultParametersValue: 
                resourceName: users
                format: csv

tags:
  - name: user

paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - user
      summary: list users
      description: ユーザー一覧
      parameters:
        - $ref: './components.yaml#/components/parameters/PagerSizeQueryParam'
        - $ref: './components.yaml#/components/parameters/PagerPageQueryParam'
        - $ref: './components.yaml#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/UserIdQueryParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListWithPager'
      security:
        - jwt: []

    post:
      operationId: createUser
      tags:
        - user
      summary: create user
      description: ユーザー作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePayload'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - jwt: []

  /users/{userId}:
    put:
      operationId: updateUser
      tags:
        - user
      summary: update user
      description: ユーザー更新
      parameters:
        - $ref: '#/components/parameters/UserIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePayload'
      responses:
        204:
          description: OK
      security:
        - jwt: []

    delete:
      operationId: removeUser
      tags:
        - user
      summary: remove user
      description: ユーザー削除
      parameters:
        - $ref: '#/components/parameters/UserIdPathParam'
      responses:
        204:
          description: OK
      security:
        - jwt: []

components:
  parameters: 
    UserIdPathParam:
      name: userId
      in: path
      schema:
        type: string
      required: true

    UserIdQueryParam:
      name: userId
      in: query
      schema:
        type: string
      required: false

  schemas:
    UserListWithPager:
      allOf:
        - $ref: './components.yaml#/components/schemas/Pager'
        - type: object
          properties:
            list:
              $ref: '#/components/schemas/UserList'
          required:
            - list

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          description: ID
          type: string
        name:
          description: 名前
          type: string
        nickName:
          description: ニックネーム
          type: string
        createdAt:
          description: 作成日時
          type: string
          format: date-time
        updatedAt:
          description: 更新日時
          type: string
          format: date-time
      required:
        - id
        - name

    UserCreatePayload:
      type: object
      properties:
        name:
          description: 名前
          type: string
        nickName:
          description: ニックネーム
          type: string
      required:
        - name

    UserUpdatePayload:
      type: object
      properties:
        name:
          description: 名前
          type: string
        nickName:
          description: ニックネーム
          type: string
      required:
        - name
