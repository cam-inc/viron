#!/bin/bash

export LANG=C

# --------------------------
# const
ORGANIZATION_DIR="src/github.com"
ORGANIZATION_NAME="cam-inc"


declare -a deps=(
  "git github.com/goadesign/goa HEAD recursive"
  "git github.com/goadesign/gorma HEAD recursive"
  "git github.com/jinzhu/gorm HEAD recursive"
  "git github.com/tockins/realize HEAD"

)

log() {
  echo "[LOG] $1"
}

__execpath(){
  if [ ! -e "$1" ]; then
    return 1
  fi
  pushd `dirname $1` >/dev/null 2>&1
  [ $? -eq 1 ] && exit 1
  _dir=`pwd`
  popd >/dev/null 2>&1
  echo ${_dir}
}
__SCRIPT_DIR=`__execpath $0`
#log "script dir: ${__SCRIPT_DIR}"

__goget() {
  vcs=$1
  pkg=$2
  rev=$3
  recursive=$4

  [ "x${recursive}" == "xrecursive" ] && recursive="/..."

  pkg_url=https://${pkg}
  target_dir=${__SCRIPT_DIR}/src/${pkg}


  if [ ! -d ${target_dir} ]; then
    log "go get <-- ${vcs}:${pkg}${recursive}@${rev}"
    GOPATH=${__SCRIPT_DIR} go get ${pkg}${recursive}
  fi

  case ${vcs} in
    git)
      pushd ${target_dir} >/dev/null 2>&1
      git reset --quiet --hard ${rev}
      # log "git reset --quiet --hard ${rev}"
      [ $? -ne 0 ] && echo "[ERROR] git reset error. git reset --quiet --hard ${rev}" && exit 1

      rev_reset=`git --no-pager log -n 1 --pretty=format:"%H"`

      if [ "_${rev}" == "_${rev_reset}" ]; then
        log "check [success] git reset: ${rev} == ${rev_reset}"
      elif [ "_${rev}" == "_HEAD" ]; then
        log "check [skip]    git reset: ${rev}"
      else
        log "check [failure] git reset: ${rev} != ${rev_reset}"
      fi
      #git --no-pager log -n 1 --pretty=oneline

      popd >/dev/null 2>&1
      ;;
  esac
}

# --
install() {
  for ((i = 0; i < ${#deps[@]}; i++)) {
    # log "go get <-- ${deps[i]}"
    __goget ${deps[i]}
  }
}

uninstall() {
  find ./src -mindepth 2 -maxdepth 2 | grep -v ${ORGANIZATION_NAME} | tee -a /dev/stderr | xargs rm -rf
  find ./src -mindepth 1  | grep -v ${ORGANIZATION_DIR} | tee -a /dev/stderr | xargs rm -rf
}

usage() {
  cat <<_EOT_
Usage:
  $0 [install|uninstall]

Description:
  vendor install script

Options:
  no set

_EOT_
  exit 1
}

# run!!
if [ "x$1" == "xinstall" ]; then
  install
elif [ "x$1" == "xuninstall" ]; then
  uninstall
else
  usage
fi
